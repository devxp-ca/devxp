import {Grid} from "@mui/material";
import React from "react";
import LabelledTextInput from "../labelledInputs/LabelledTextInput";
import Resource, {ResourceState} from "./Resource";

export interface EnvVar {
	value: string;
	name: string;
}

interface IProps {
	image?: string;
	env?: EnvVar[];
}
interface IState extends ResourceState {
	env: EnvVar[];
	image: string;
}
export default class CloudRun extends Resource<IProps, IState> {
	static defaultProps = {
		...Resource.defaultProps,

		//Type of resource for labels
		resource: "Cloud Run",

		//Keys of IState, hacky I know
		data: ["env", "image"],

		//For autogenerated random IDs
		randomPrefix: "cloud-run-",

		//The "type" to send to the backend
		resourceType: "cloudRun",

		disableIam: true,
		autoIam: false
	};

	constructor(props: IProps) {
		super(props);

		//Lmao this is so bad practice
		this.state = {
			...this.state,
			image: this.props.image ?? "",
			env: this.props.env ?? []
		};
	}

	render() {
		return (
			<Grid
				sx={{
					padding: "5px",
					gridGap: "15px",
					display: "flex",
					flexDirection: "column",
					...(this.state.valid
						? {}
						: {
								border: "2px solid red",
								borderRadius: "10px"
						  })
				}}>
				<LabelledTextInput
					text="Docker image"
					initial={this.state.image}
					description="URL for container image"
					onChange={(image: string) => this.setState({image})}
				/>

				{super.render()}
			</Grid>
		);
	}
}
