name: Build and Deploy to Google Cloud Run ☁️⚙️🚀

on:
  push:
    branches:
      - main
    paths:
    - 'backend/src/**'
    - 'frontend/src/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout 🕵'
      id: 'checkout'
      uses: actions/checkout@v2

    - name: 'auth 🔑'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK ☁️'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Set sha 🧮'
      id: sha
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: 'Build Docker image and upload to GCCR ⚙️'
      run: 'PROJECT_ID=${{ secrets.PROJECT_ID }} SERVICE=${{ secrets.SERVICE }} SHA=${{ steps.sha.outputs.sha_short }} ./build.sh'


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: hashicorp/setup-terraform@v1

    - name: checkout 🕵'
      id: 'checkout'
      uses: actions/checkout@v2

    - name: 'auth 🔑'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK ☁️'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: 'Setup terraform 🟪'
      run: 'terraform init'

    - name: 'Initialize terraform env vars ☂️'
      run: 'CONNECTION_STRING="${{ secrets.CONNECTION_STRING }}" GITHUB_CLIENT_ID="${{ secrets.OAUTH_GITHUB_CLIENT_ID }}" GITHUB_CLIENT_SECRET="${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}" ./createTerraformVarsFile.sh CONNECTION_STRING GITHUB_CLIENT_ID GITHUB_CLIENT_SECRET'

    - name: 'Terraform Apply 🚀'
      run: 'terraform apply -lock=false -auto-approve'
